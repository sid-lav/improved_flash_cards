# api_config.py
# contains config and queying function for each API
# sid@lapentop .../[12.04]-thesis

import anthropic
import os
import time

##########################################################################################################################################################################################
##########################################################################################################################################################################################
# 1. globals
##########################################################################################################################################################################################
##########################################################################################################################################################################################

# keys

# claude_key = os.environ.get('ANTHROPIC_API_KEY')
claude_key = "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"

# models
claude_model = "claude-3-opus-20240229" # models: https://www.anthropic.com/api

# prompts and max tokens
max_tokens = 4

# system message
sysmsg = """ONLY RESPOND WITH A VALUE BETWEEN 1 AND 10!, DO NOT WRITE ANYTHING ELSE IN YOUR RESPONSE"""

# formatting for the query
prompt_format = """On a scale of 1-10, rate how much the following non-word sounds correct phonetically <nonword>{non_word}</nonword>?"""

# directories
input_dir = "/thesis/3 - programming/31-data/"
output_dir = "/thesis/3 - programming/32-results/"

input_file = f"{input_dir}/ipa_all.csv"


##########################################################################################################################################################################################
##########################################################################################################################################################################################

import datetime

# Get the current time
now = datetime.datetime.now()

# Format the current time as ISO 8601
# Example format: 2024-07-23T15:45
timestamp = now.strftime("%Y-%m-%dT%H:%M")


# function to generate the message to give to API
def message(word, prompt_format):
    prompt = prompt_format.format(non_word = word)
    return prompt


##########################################################################################################################################################################################
##########################################################################################################################################################################################
# 2. configuration for each api
##########################################################################################################################################################################################
##########################################################################################################################################################################################

claude_config = {
    "YOUR_API_KEY": claude_key,
    "api": "claude",
    "model": claude_model,  
    "sysmsg": sysmsg,
    "prompt_format": prompt_format,
    "input_words_file_name": input_file,
    "output_file_name_simple": f"{output_dir}/32.02-json/new_english.json",
    "output_file_name_detail": f"{output_dir}/32.03-txt_output/{timestamp}_{claude_model}_detail.txt",
    "max_tokens": max_tokens
}


##########################################################################################################################################################################################
##########################################################################################################################################################################################
# 3. functions for querying APIs
##########################################################################################################################################################################################
##########################################################################################################################################################################################

def claude_query(prompt_format, words, reverse=False):
    time.sleep(2)
    client = anthropic.Anthropic(api_key=claude_config["YOUR_API_KEY"])

    prompt = message(words, prompt_format)
    messages = [
        {
            "role": "user",
            "content": prompt,
        },
    ]

    response = client.messages.create(
        model=claude_config["model"],
        max_tokens= max_tokens,
        messages = messages,
        system = claude_config["sysmsg"]
    )
    return response,  response.content[0].text.lower()


##########################################################################################################################################################################################
##########################################################################################################################################################################################
# dictionary to store configurations and query functions
##########################################################################################################################################################################################
##########################################################################################################################################################################################

api_dict = {
    "claude": {
        "config": claude_config,
        "query_func": claude_query
    }
}

